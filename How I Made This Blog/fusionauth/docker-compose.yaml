services:
  fusionauth-db:
    image: postgres:12.9
    container_name: fusionauth-db
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    security_opt:
        - label:disable
    networks:
      - fusionauth-nw
    restart: unless-stopped
    volumes:
      - ./container-data/db:/var/lib/postgresql/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    container_name: fusionauth
    depends_on:
      fusionauth-db:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://fusionauth-db:5432/fusionauth
      DATABASE_ROOT_USERNAME: postgres
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: fusionauth
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: 512M
      FUSIONAUTH_APP_RUNTIME_MODE: production
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_TYPE: database
    networks:
      - fusionauth-nw
      - reverseproxy-nw
    restart: unless-stopped
    security_opt:
        - label:disable
    volumes:
      - ./container-config/config:/usr/local/fusionauth/config

networks:
  fusionauth-nw:
  reverseproxy-nw:
    external: true